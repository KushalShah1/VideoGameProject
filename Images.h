// images.h
// contains image buffers for simple space invaders
// Jonathan Valvano, March 5, 2018
// Capture image dimensions from BMP files

#ifndef __images_h
#define __images_h
#include <stdint.h>


// *************************** Images ***************************
// enemy ship that starts at the top of the screen (arms/mouth closed)
// width=16 x height=10
//Contains all the Images for the game
//20x21
const unsigned short john[] = {
 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x5163, 0x5163, 0x4921, 0x1860, 0x1860, 0xFFFF,
 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x5183, 0x4101, 0x1062,
 0x10EC, 0xA554, 0x10A2, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x20C2, 0x20C2,
 0x20E2, 0x1880, 0x0889, 0x21FF, 0x84BF, 0x840E, 0x0820, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
 0x4102, 0x0062, 0x08A2, 0x10C3, 0x08C3, 0x0841, 0x1042, 0xAD9B, 0x8C4F, 0x0000, 0x20A1, 0x5163, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x4102, 0x29C7, 0x0882, 0x3228, 0x1966, 0x1904, 0x5163, 0x0000, 0x38E2, 0xA2E8, 0x30E2, 0x4943,
 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x4102, 0x29C7, 0x08A2, 0x3229, 0x2166, 0x1904, 0x2081, 0x1040,
 0x79E5, 0x9286, 0x7205, 0x30E1, 0x5163, 0xFFFF, 0xFFFF, 0xFFFF, 0xEF7D, 0xFFFF, 0xFFDF, 0x59C5, 0x3903, 0x10E4, 0x0800, 0x1904,
 0x1082, 0x0821, 0x1840, 0x0841, 0x08C3, 0x0000, 0x0863, 0x10A4, 0x18A3, 0x62CA, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x5185,
 0x2104, 0x022A, 0x0146, 0x04D5, 0x0000, 0x0558, 0x18E3, 0x3A69, 0x1105, 0x4B97, 0x85DF, 0x85FF, 0x8E5F, 0x1907, 0xEF5D, 0xFFFF,
 0xFFFF, 0x4103, 0x28A1, 0x3081, 0x1020, 0x0000, 0x024A, 0x0000, 0x0146, 0x0125, 0x29C7, 0x0000, 0x6CBE, 0xAF7F, 0x53B0, 0x1000,
 0x324A, 0x30C1, 0xFFFF, 0xFFFF, 0x40C2, 0x0104, 0x02CD, 0x0517, 0x01A7, 0x7CF4, 0x7CD3, 0x6411, 0x42AB, 0x2986, 0x0882, 0x38A0,
 0x324C, 0x324A, 0x1000, 0x1020, 0x2060, 0x4942, 0xFFFF, 0xFFFF, 0x030D, 0x0474, 0x02ED, 0x05B9, 0x01A8, 0x7CD3, 0x7CD4, 0x6431,
 0x3AAB, 0x3A8A, 0x0882, 0x3187, 0x5142, 0x2903, 0x5C35, 0x74F9, 0x6479, 0x10A4, 0x5983, 0xFFFF, 0x0209, 0x030E, 0x1800, 0x2082,
 0x0800, 0x7493, 0x6C72, 0x42CB, 0x3A6A, 0x3208, 0x1947, 0x4B0F, 0x3AAF, 0x857F, 0x851E, 0x6C5A, 0x4AF1, 0x29EB, 0x28A0, 0x5184,
 0x0517, 0x1800, 0xFFFF, 0xFFFF, 0x4924, 0x3A8A, 0x3A49, 0x0000, 0x2186, 0x10E4, 0x3209, 0x2144, 0x31A5, 0x74BB, 0x74B9, 0x3A8C,
 0x4AEE, 0x6C3A, 0x322E, 0x4922, 0x06DE, 0x2881, 0xFFFF, 0xFFFF, 0x4103, 0x1000, 0x532C, 0x6C51, 0x2186, 0x0001, 0x4269, 0x39A6,
 0x4AAA, 0x4B32, 0x2A46, 0x5DC0, 0xD7F4, 0x33A0, 0x1906, 0x4943, 0x0125, 0x1882, 0xFFFF, 0xFFFF, 0x024A, 0x0579, 0x0370, 0x09A7,
 0x0001, 0x0008, 0x3A29, 0x4A89, 0x5B2C, 0x3224, 0x636B, 0x5DA1, 0xCFF5, 0x55A0, 0x10E0, 0x5984, 0x0A8B, 0x0146, 0x38E3, 0xFFFF,
 0x030E, 0x06FF, 0x0599, 0x0599, 0x0002, 0x0869, 0x31E8, 0xBE58, 0x73CE, 0x0000, 0x2185, 0x75A7, 0x962E, 0x6D66, 0x1A60, 0xFFFF,
 0x28A1, 0x01A7, 0x0041, 0x3862, 0x0187, 0x0390, 0x02CC, 0x02CC, 0x0000, 0x0869, 0x322E, 0x42AF, 0x0027, 0x0003, 0x8DDF, 0x747B,
 0x74BB, 0x6458, 0x1020, 0xFFFF, 0xFFFF, 0x0000, 0x05BA, 0x0082, 0x036F, 0x07DF, 0x063C, 0x061B, 0x0000, 0x0004, 0x0847, 0x10E9,
 0x18EA, 0x0003, 0x3A6D, 0x6474, 0x4B2E, 0x0864, 0x0801, 0xFFFF, 0xFFFF, 0x4946, 0x00C3, 0x02CC, 0x036F, 0x07DF, 0x061C, 0x05FB,
 0xFFFF, 0xFFFF, 0x08A8, 0x10A8, 0x0888, 0x0867, 0x0004, 0x0003, 0x0005, 0x10CA, 0x08A8, 0xFFFF, 0xFFFF, 0xFFFF, 0x6A8A, 0x2104,
 0x01A7, 0x04B5, 0x03B0, 0x0390, 0xFFFF, 0xFFFF, 0x0023, 0x0887, 0x10A7, 0x08A8, 0x10A9, 0x0888, 0x0887, 0x08A9, 0x10C9, 0xFFFF,
 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x1083, 0x0862, 0x0024,
 0x10C8, 0x0820, 0x0003, 0xFFFF,

};


//10x50
const unsigned short laser[] = {
 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x52EC, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x34B7,
 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x3AAD, 0x1E3D, 0x59A6, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
 0xFFFF, 0x42EF, 0x2CD6, 0x2FBF, 0x3A2C, 0x5207, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x4B0D, 0x2EFF, 0x477E, 0x6FFF, 0x1E3E, 0x436E,
 0x61A4, 0xFFFF, 0xFFFF, 0x59E7, 0x32CE, 0x5FFF, 0xD7FF, 0xCFFF, 0x3FFF, 0x3371, 0x6183, 0xFFFF, 0xFFFF, 0x4517, 0x0DFB, 0xC7FF,
 0xEE79, 0xC638, 0x97FF, 0x2455, 0x39A5, 0xFFFF, 0xFFFF, 0x1CD7, 0x3FFF, 0xDFFE, 0x8C91, 0xBDF7, 0xBF9D, 0x277F, 0x1CB8, 0xFFFF,
 0x6ACA, 0x3A2B, 0x6FFF, 0xC679, 0x9DB7, 0xA6FC, 0xCEDA, 0x7FFF, 0x177F, 0xFFFF, 0x530C, 0x5A8B, 0x371E, 0xA679, 0x95F9, 0xB75D,
 0xBEDB, 0x77FF, 0x2454, 0xFFFF, 0x634E, 0x5AAB, 0x369E, 0xA698, 0xA553, 0xCE79, 0xA71C, 0x26DE, 0xFFFF, 0xFFFF, 0x7B8D, 0x4B8F,
 0x5FBF, 0xC637, 0x7DB7, 0x85B6, 0xC6DA, 0x35DA, 0xFFFF, 0xFFFF, 0xFFFF, 0x1CB8, 0x4FFF, 0xD73C, 0x569E, 0x7F7E, 0xE73C, 0x2F3F,
 0x5166, 0xFFFF, 0xFFFF, 0xFFFF, 0x1E5D, 0x9FFF, 0x86BB, 0x6EBC, 0xAFFF, 0x27FF, 0x2AEF, 0xFFFF, 0xFFFF, 0xFFFF, 0x320B, 0x377F,
 0xFFFF, 0xD7FF, 0x1F7F, 0x1E1E, 0x3537, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x26DE, 0xFFFF, 0xA7FE, 0x061D, 0x5AF0, 0xFFFF, 0xFFFF,
 0xFFFF, 0xFFFF, 0xFFFF, 0x175F, 0xD7FE, 0xA7FF, 0x230F, 0x5ACB, 0x630C, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x1D9B, 0xA7DF, 0xD7FF,
 0x2596, 0x43B1, 0x6B0C, 0xFFFF, 0xFFFF, 0xFFFF, 0x4985, 0x0395, 0x87FF, 0xF7FE, 0x2FDF, 0x4476, 0x4A28, 0xFFFF, 0xFFFF, 0xFFFF,
 0x434F, 0x1EFF, 0xC7FF, 0xD7FF, 0x157A, 0x49A7, 0x5A88, 0xFFFF, 0xFFFF, 0xFFFF, 0x3A08, 0x15BC, 0xAFFF, 0xC7FF, 0x130F, 0x58E1,
 0x51A5, 0xFFFF, 0xFFFF, 0xFFFF, 0x61C4, 0x22D0, 0x7FFF, 0xBFFF, 0x1B32, 0x4185, 0x59A5, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x3A09,
 0x87DF, 0xDFFF, 0x26BD, 0x34B5, 0x51A4, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x332F, 0x7FFF, 0xFFFF, 0x4FFF, 0x2C35, 0xFFFF, 0xFFFF,
 0xFFFF, 0xFFFF, 0x51A3, 0x359B, 0x47FF, 0xFFFF, 0x4FBF, 0x41A7, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x51A3, 0x1B30, 0x265C, 0xDFFF,
 0x26BD, 0x4944, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x6144, 0x0C15, 0xDFFF, 0x57BF, 0x31E9, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
 0xFFFF, 0x4168, 0x0DBA, 0xDFFF, 0x67FF, 0x2CF7, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x1D9C, 0x379F, 0xEFFF, 0x377F, 0x1D3A,
 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x1497, 0x77FF, 0xE7FF, 0x0C55, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x5963, 0x3A8B,
 0x6FFF, 0xD7FF, 0x1BB2, 0x50A0, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x4983, 0x2967, 0x577F, 0xEFFF, 0x0598, 0x7267, 0xFFFF, 0xFFFF,
 0xFFFF, 0x4963, 0x5964, 0x1AB0, 0x67BF, 0xEFFF, 0x2F3F, 0x5AAC, 0xFFFF, 0xFFFF, 0xFFFF, 0x5921, 0x322C, 0x167F, 0x9FFF, 0xAFFF,
 0x069E, 0x53D2, 0x82A8, 0xFFFF, 0xFFFF, 0x2820, 0x124C, 0x171F, 0xEFFE, 0x77FF, 0x32F1, 0x5A6B, 0x6A67, 0xFFFF, 0xFFFF, 0x40C2,
 0x3883, 0x1EFF, 0xF7FF, 0x97FF, 0x1D39, 0x2AF0, 0x332E, 0xFFFF, 0xFFFF, 0x4AED, 0x22CF, 0x37BF, 0xEFDE, 0xD7DF, 0x2F9F, 0x1EBF,
 0x3C96, 0xFFFF, 0xFFFF, 0x2D9A, 0x171F, 0x9FFF, 0x665A, 0x665C, 0xBFFF, 0x37FF, 0x39EA, 0xFFFF, 0xFFFF, 0x3ACF, 0x47FF, 0xCE99,
 0x463A, 0x671C, 0xBEB9, 0x2EBD, 0x6125, 0xFFFF, 0xFFFF, 0x4105, 0x4F9F, 0xBE17, 0x8D55, 0x9597, 0xCEDA, 0x1DBA, 0x48C2, 0xFFFF,
 0xFFFF, 0xFFFF, 0xFFFF, 0x9638, 0x8C92, 0xAE38, 0x8EFB, 0x36DE, 0x18E3, 0xFFFF, 0xFFFF, 0xFFFF, 0x373F, 0x9E37, 0x7DD6, 0xA75D,
 0xB67A, 0x5FFF, 0x24B7, 0xFFFF, 0xFFFF, 0x326C, 0x5FFF, 0xD658, 0x74D2, 0xB65A, 0xDE7A, 0x57FF, 0x1F3F, 0xFFFF, 0xFFFF, 0x253A,
 0x1F5F, 0xDFFF, 0x83CE, 0x9CF2, 0xA7DE, 0x269E, 0x23D3, 0xFFFF, 0xFFFF, 0x3C11, 0x0CB8, 0x97FF, 0xE73C, 0xEEDA, 0x6FFF, 0x23D4,
 0x6AAA, 0xFFFF, 0xFFFF, 0x7B4C, 0x4B70, 0x3FFF, 0xAFFF, 0xAFFF, 0x0FDF, 0x4BF3, 0x832A, 0xFFFF, 0xFFFF, 0xFFFF, 0x5B30, 0x059E,
 0x1E9E, 0x3FFF, 0x14BA, 0x638F, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x3476, 0x16BF, 0x7B0F, 0xFFFF, 0xFFFF, 0xFFFF,
 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x7B30, 0x1D1B, 0x8B6A, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x4436,
 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,

};



//7x10
const unsigned short coin[] = {
 0xB77F, 0x059F, 0x05BF, 0x05BF, 0x7EBF, 0xFFFF, 0xFFFF, 0x16DF, 0x071F, 0x073F, 0x073F, 0x05FF, 0xE79F, 0xFFFF, 0x069F, 0x06DF,
 0x075F, 0x073F, 0x06DF, 0x76DF, 0xFFFF, 0x067F, 0x061F, 0x06BF, 0x06FF, 0x071F, 0x7F5F, 0xFFFF, 0x067F, 0x061F, 0x06DF, 0x06FF,
 0x071F, 0x7F5F, 0xFFFF, 0x067F, 0x4E7F, 0x06BF, 0x06FF, 0x071F, 0x7F5F, 0xFFFF, 0x0EBF, 0xFFBF, 0x4F3F, 0x06FF, 0x071F, 0x7F5F,
 0xFFFF, 0x06DF, 0xFFFF, 0x461F, 0x061F, 0x06FF, 0x775F, 0xFFFF, 0x0F3F, 0x3EFF, 0x05FF, 0x063F, 0x06BF, 0xE7DF, 0xFFFF, 0xA7DF,
 0x073F, 0x075F, 0x075F, 0x677F, 0xFFFF, 0xFFFF,

};



//11x12
const unsigned short bomb[] = {
 0xFFFF, 0xFFFF, 0x8410, 0x18C3, 0x18E3, 0x18E3, 0x18C3, 0x7BEF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x18C3, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x10A2, 0xFFFF, 0xFFFF, 0x9CD3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x8C71,
 0xFFFF, 0x4A69, 0x0861, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2965, 0xFFFF, 0x5ACB, 0x2124, 0x18E3, 0x0861,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18E3, 0xFFFF, 0x9CD3, 0x39C7, 0x3186, 0x2104, 0x10A2, 0x0020, 0x0000, 0x0000, 0x0000,
 0x5AEB, 0xFFFF, 0xFFFF, 0x4A49, 0x5ACB, 0x73AE, 0x2965, 0x2124, 0x10A2, 0x0000, 0x0000, 0xFFDF, 0xFFFF, 0xFFFF, 0xEF7D, 0x7BEF,
 0x8C51, 0x4228, 0x2124, 0x0861, 0x0020, 0xE71C, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xE71C, 0x0000, 0x0020, 0x0862, 0x6B6D,
 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x8CF5, 0xEFBF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
 0xFFFF, 0xFFFF, 0xFFFF, 0xF7BF, 0x5390, 0xFFFF, 0xF7FF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xF7FF, 0x97FF,
 0x20FD, 0xDFFF, 0xF7FF, 0xFFFF,

};





#endif /* __images_h */
